{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","clock","setState","console","info","toUTCString","slice","this","window","setInterval","clearInterval","timeToRender","className","props","name","React","Component","App","hasClock","clockName","nameId","clockHidde","event","preventDefault","clockShow","changeClockName","value","now","toString","document","addEventListener","_","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,EAeEC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,MAAO,IAAIC,OAE3BI,QAAQC,KAAK,EAAKP,MAAMC,MAAMO,cAAcC,OAAO,IAAK,KAlB5D,uDAOE,WACEC,KAAKP,QAAUQ,OAAOC,YAAYF,KAAKN,MAAO,OARlD,kCAWE,WACES,cAAcH,KAAKP,WAZvB,oBAqBE,WACE,IAAMW,EAAeJ,KAAKV,MAAMC,MAAMO,cAAcC,OAAO,IAAK,GAEhE,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,KAAKM,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGD,WAjCX,GAA2BI,IAAMC,WCDpBC,EAAb,4MACEpB,MAAyB,CACvBqB,UAAU,EACVC,UAAW,WAHf,EAMEC,OAAS,EANX,EA0BEC,WAAa,SAACC,GACZA,EAAMC,iBACF,EAAK1B,MAAMqB,UACb,EAAKhB,SAAS,CAAEgB,UAAU,KA7BhC,EAiCEM,UAAY,WACL,EAAK3B,MAAMqB,UACd,EAAKhB,SAAS,CAAEgB,UAAU,KAnChC,EAuCEO,gBAAkB,WAChB,GAAI,EAAK5B,MAAMqB,SAAU,CACvB,IAAMQ,EAAQ3B,KAAK4B,MAAMC,WAAWtB,OAAO,GAE3C,EAAKJ,SAAS,CAAEiB,UAAU,SAAD,OAAWO,OA3C1C,uDAQE,WACEG,SAASC,iBAAiB,cAAevB,KAAKc,YAC9CQ,SAASC,iBAAiB,QAASvB,KAAKiB,WACxCjB,KAAKa,OAASZ,OAAOC,YAAYF,KAAKkB,gBAAiB,QAX3D,gCAcE,SAAmBM,EAAOC,GACpBA,EAAUb,YAAcZ,KAAKV,MAAMsB,WAErChB,QAAQ8B,MAAR,uBAA8BD,EAAUb,UAAxC,eAAwDZ,KAAKV,MAAMsB,cAjBzE,kCAqBE,WACEU,SAASK,oBAAoB,cAAe3B,KAAKc,YACjDQ,SAASK,oBAAoB,QAAS3B,KAAKiB,aAvB/C,oBA+CE,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,6CAEEL,KAAKV,MAAMqB,UACX,cAAC,EAAD,CAAOJ,KAAMP,KAAKV,MAAMsB,mBArDlC,GAAyBJ,IAAMC,WCN/BmB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.4f992e21.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.clock, 1000);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  clock = () => {\n    this.setState({ today: new Date() });\n    // eslint-disable-next-line\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  };\n\n  render() {\n    const timeToRender = this.state.today.toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeToRender}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.clockHidde);\n    document.addEventListener('click', this.clockShow);\n    this.nameId = window.setInterval(this.changeClockName, 3300);\n  }\n\n  componentDidUpdate(_: {}, prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.clockHidde);\n    document.removeEventListener('click', this.clockShow);\n  }\n\n  clockHidde = (event: MouseEvent) => {\n    event.preventDefault();\n    if (this.state.hasClock) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  clockShow = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  changeClockName = (): void => {\n    if (this.state.hasClock) {\n      const value = Date.now().toString().slice(-4);\n\n      this.setState({ clockName: `Clock-${value}` });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {(this.state.hasClock) && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}